# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Handle Alerts Regular Alert
- Location: C:\Users\yildi\VsCodeProjects\PlayWrightJavaScript\tests\Alert1.spec.js:5:5

# Error details

```
Error: page.goto: Test timeout of 30000ms exceeded.
Call log:
  - navigating to "https://the-internet.herokuapp.com/javascript_alerts", waiting until "load"

    at C:\Users\yildi\VsCodeProjects\PlayWrightJavaScript\tests\Alert1.spec.js:11:17
```

# Test source

```ts
   1 | import{test,expect} from '@playwright/test';
   2 |
   3 |
   4 |
   5 | test('Handle Alerts Regular Alert', async({ page })=>{
   6 |
   7 |     // by default alerts are handled by playwright and they are not shown in the browser
   8 |     // to see the alerts in the browser we need to set the 'page.on' event listener
   9 |
  10 |
> 11 |      await page.goto("https://the-internet.herokuapp.com/javascript_alerts");
     |                 ^ Error: page.goto: Test timeout of 30000ms exceeded.
  12 |
  13 |
  14 |      await page.on('dialog', async dialog => 
  15 |     {
  16 |         expect(dialog.type()).toBe('alert'); // check the type of the alert
  17 |         expect(dialog.message()).toBe('I am a JS Alert'); // check the message of the alert
  18 |         console.log(dialog.message());
  19 |         await dialog.accept(); // to accept the alert
  20 |         // dialog.dismiss(); // to dismiss the alert
  21 |      })
  22 |      await page.locator("//button[@onclick='jsAlert()']").click(); 
  23 |
  24 |     const text= await page.locator("//p[@id='result']");
  25 |
  26 |     await expect(await text.textContent()).toBe('You successfully clicked an alert'); // check the text of the alert
  27 |
  28 |
  29 |     await page.waitForTimeout(3000); // wait for 2 seconds to see the alert
  30 |
  31 |     
  32 | })
  33 |
```